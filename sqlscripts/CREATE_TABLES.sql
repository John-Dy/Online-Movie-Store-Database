CREATE TABLE DIRECTOR (DirectorID INT NOT NULL, FullName VARCHAR(255) NOT NULL, Birthday DATE, PRIMARY KEY (DirectorID));
CREATE TABLE ACTOR (ActorID INT NOT NULL,FullName VARCHAR(255) NOT NULL,Birthday DATE,PRIMARY KEY (ActorID));
CREATE TABLE CUSTOMER (CustomerID INT NOT NULL,FullName VARCHAR(255) NOT NULL,Email VARCHAR(255) NOT NULL UNIQUE,PRIMARY KEY (CustomerID));
CREATE TABLE PURCHASE (PurchaseID INT NOT NULL,PurchaseDate DATE NOT NULL,CustomerID INT,PRIMARY KEY (PurchaseID),FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID));
CREATE TABLE MOVIE (MovieID INT NOT NULL,MovieName VARCHAR(255) NOT NULL,ReleaseDate DATE NOT NULL,Genre VARCHAR(255),Runtime NUMBER,DirectorID INT,PRIMARY KEY (MovieID),FOREIGN KEY (DirectorID) REFERENCES Director(DirectorID));
CREATE TABLE REVIEW (ReviewID INT NOT NULL,Score NUMBER NOT NULL,Comments VARCHAR(255) DEFAULT 'No Comment',MovieID INT,CustomerID INT,PRIMARY KEY (ReviewID),FOREIGN KEY (MovieID) REFERENCES Movie(MovieID),FOREIGN KEY (CustomerID) REFERENCES Customer(CustomerID));
CREATE TABLE MOVIE_PURCHASED (PurchaseID INT,MovieID INT,FOREIGN KEY (PurchaseID) REFERENCES Purchase(PurchaseID),FOREIGN KEY (MovieID) REFERENCES Movie(MovieID));
CREATE TABLE CUSTOMER_OWNS (CustomerID INT,MovieID INT,FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID),FOREIGN KEY (MovieID) REFERENCES Movie(MovieID));
CREATE TABLE ACTED (ActorID INT,MovieID INT,FOREIGN KEY (ActorID) REFERENCES ACTOR(ActorID),FOREIGN KEY (MovieID) REFERENCES Movie(MovieID));